@model XoohooViewModelItem<UserInput>
@section TitleContent{
    @Html.SiteTitle("人员信息管理", "人员基本信息编辑")
}
@section HeadCustom{
    <style type="text/css">
        ul.status li {
            float: left;
            width: 50px;
            float: left;
        }
    </style>
    <script language="javascript" type="text/javascript">

        $(document).ready(function () {

        });
    </script>
}
@section NavigationContent
{
    当前位置：人员信息管理 &gt;&gt; 人员基本信息编辑
}
@{
    string returnUrl = Model.ReturnURL;

    UserInputAdd userInputAdd = null;
    UserInputEdit userInputEdit = null;
    UserInput user = Model.Item;
    bool isEdit = user != null;

    //特定权限
    var roles = (SelectList)ViewBag.RoleSelectList;
    //特定权限
    var permissions = (IEnumerable<Permission>)ViewBag.PermissionList;

    var inputStyle = new { @class = "input" };
    var textareaStyle = new { @class = "textarea" };

    Html.BeginRouteForm(isEdit ? "Admin.Project.UserManager.UserEditSave" : "Admin.Project.UserManager.UserAddSave");
}
@Html.AntiForgeryToken()
@Html.HiddenFor(user, item => item.UserID)

<table cellpadding="4" cellspacing="0" class="tbl">
    <tr>
        <td class="tit">
            用户名：
        </td>
        <td class="con">
            @Html.TextBoxFor(user, item => item.Username, inputStyle)
        </td>
        <td>
            @Html.ValidationMessageFor(user, item => item.Username, "请输入用户名")
        </td>
    </tr>
    <tr>
        <td class="tit">
            昵称：
        </td>
        <td class="con">
            @Html.TextBoxFor(user, item => item.DisplayName, inputStyle)
        </td>
        <td>
            @Html.ValidationMessageFor(user, item => item.DisplayName, "请输入昵称")
        </td>
    </tr>
    <tr>
        <td class="tit">
            真实名称：
        </td>
        <td class="con">
            @Html.TextBoxFor(user, item => item.RealName, inputStyle)
        </td>
        <td>
            @Html.ValidationMessageFor(user, item => item.RealName, "请输入真实名称")
        </td>
    </tr>
    <tr>
        <td class="tit">
            真实名称验证：
        </td>
        <td class="con">
            @Html.CheckBoxFor(user, item => item.RealNameIsValid)@Html.LabelFor(user, item => item.RealNameIsValid)
        </td>
        <td></td>
    </tr>
    <tr>
        <td class="tit">
            邮箱：
        </td>
        <td class="con">
            @Html.TextBoxFor(user, item => item.Email, inputStyle)
        </td>
        <td>
            @Html.ValidationMessageFor(user, item => item.Email, "请输入邮箱")
        </td>
    </tr>
    <tr>
        <td class="tit">
            邮箱验证：
        </td>
        <td class="con">
            @Html.CheckBoxFor(user, item => item.EmailIsValid)@Html.LabelFor(user, item => item.EmailIsValid)
        </td>
        <td></td>
    </tr>
    <tr>
        <td class="tit">
            手机：
        </td>
        <td class="con">
            @Html.TextBoxFor(user, item => item.Mobile, inputStyle)
        </td>
        <td>
            @Html.ValidationMessageFor(user, item => item.Mobile, "请输入手机号码")
        </td>
    </tr>
    <tr>
        <td class="tit">
            手机验证：
        </td>
        <td class="con">
            @Html.CheckBoxFor(user, item => item.MobileIsValid)@Html.LabelFor(user, item => item.MobileIsValid)
        </td>
        <td></td>
    </tr>
    <tr>
        <td class="tit">
            登录密码：
        </td>
        <td>
            @{
//其实对于PasswordFor，使用userInputAdd和userInputEdit都可以
//因为使用UserInputAdd类型和UserInputEdit类型都有Password属性
            }
            @if (!isEdit)
            {
                @Html.PasswordFor(userInputAdd, item => item.Password, inputStyle)
            }
            else
            {
                @Html.PasswordFor(userInputEdit, item => item.Password, inputStyle)
            }
        </td>
        <td>
            @if (!isEdit)
            {
                @Html.ValidationMessageFor(userInputAdd, item => item.Password, "请输入登录密码")
            }
            else
            {
                @Html.ValidationMessageFor(userInputEdit, item => item.Password, "如果不修改，请保持为空")
            }
        </td>
    </tr>
    <tr>
        <td class="tit">
            确认密码：
        </td>
        <td>
            @if (!isEdit)
            {
                @Html.PasswordFor(userInputAdd, item => item.PasswordConfirm, inputStyle)
            }
            else
            {
                @Html.PasswordFor(userInputEdit, item => item.PasswordConfirm, inputStyle)
            }
        </td>
        <td>
            @if (!isEdit)
            {
                @Html.ValidationMessageFor(userInputAdd, item => item.PasswordConfirm, "请输入确认密码")
            }
            else
            {
                @Html.ValidationMessageFor(userInputEdit, item => item.PasswordConfirm, "如果不修改，请保持为空")
            }
        </td>
    </tr>
    <tr>
        <td class="tit">
            描述：
        </td>
        <td class="con">
            @Html.TextAreaFor(user, item => item.Description, textareaStyle)
        </td>
        <td></td>
    </tr>
</table>

<div id="tabsFooter" style="text-align: center">
    @Html.SkinImageButton("btnSubmit", "Styles/Images/btnSubmit.jpg")
</div>

@{Html.EndForm();}
